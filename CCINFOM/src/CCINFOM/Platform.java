/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package CCINFOM;

import java.awt.HeadlessException;
import java.awt.print.PrinterException;
import javax.swing.JFrame;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane; 
import java.sql.Connection; 
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.text.DateFormat;
import java.text.MessageFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Vector;

/**
 *
 * @author Asus
 */
public class Platform extends javax.swing.JFrame {
    /**
     * Creates new form Platform
     */
    public Platform() {
        initComponents();
        updateDB();
    }

    private void updateDB(){
        int colCount;
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection sqlConn = DatabaseConnection.getConnection();
            PreparedStatement pst = sqlConn.prepareStatement("SELECT * FROM platforms");
            
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData st = rs.getMetaData();
            
            colCount = st.getColumnCount();
            DefaultTableModel recordTable = (DefaultTableModel)tablePlat.getModel();
            recordTable.setRowCount(0);
            
            while(rs.next()){
                Vector columnData = new Vector();
                for(int j = 1; j <= colCount; j++){
                    columnData.add(rs.getObject(j));
                }
                recordTable.addRow(columnData);
            }
            
        }catch(ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
    
    private ArrayList<Integer> returnCalendar(){
        ArrayList<Integer> dateList = new ArrayList<Integer>();
        
        Date dateSelected = calendarDate.getDate();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(dateSelected);
        
        dateList.add(calendar.get(Calendar.DAY_OF_MONTH));
        dateList.add(calendar.get(Calendar.MONTH) + 1);
        dateList.add(calendar.get(Calendar.YEAR));
        
        return dateList;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        tfCountry = new javax.swing.JTextField();
        tfVersion = new javax.swing.JTextField();
        calendarDate = new com.toedter.calendar.JCalendar();
        jPanel4 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePlat = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(95, 158, 160), 8));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 64)); // NOI18N
        jLabel1.setText("Platform");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, -1, 50));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 23, 1020, 80));

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(95, 158, 160), 4));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        jLabel2.setText("Release date");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 20, -1, 36));

        jLabel3.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        jLabel3.setText("Platform name");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, 36));

        jLabel4.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        jLabel4.setText("Platform version");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, 36));

        jLabel5.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        jLabel5.setText("Country of origin");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, 36));
        jPanel3.add(tfName, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 350, 37));
        jPanel3.add(tfCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 210, 350, 37));
        jPanel3.add(tfVersion, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 350, 37));
        jPanel3.add(calendarDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 80, 400, 190));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 116, 1020, 290));

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(95, 158, 160), 4));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAdd.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel4.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 200, 50));

        btnUpdate.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel4.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 200, 50));

        btnDelete.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel4.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 200, 50));

        btnExit.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        btnExit.setText("Exit");
        btnExit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        jPanel4.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 200, 50));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 420, 260, 270));

        tablePlat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "platform_id", "platform_name", "platform_version", "country_of_origin", "release_date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablePlat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePlatMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablePlat);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, 730, 270));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1081, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        HomePage hp = new HomePage();
        this.dispose();
        hp.setVisible(true);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        DefaultTableModel recordTable = (DefaultTableModel)tablePlat.getModel();
        int selectedRow = tablePlat.getSelectedRow();

        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection sqlConn = DatabaseConnection.getConnection();
            if(JOptionPane.showConfirmDialog(this, "Confirm if you want to delete record.", "Message", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION){
                PreparedStatement pst = sqlConn.prepareStatement("DELETE FROM platforms WHERE platform_id=?");

                pst.setInt(1, Integer.parseInt(recordTable.getValueAt(selectedRow, recordTable.findColumn("platform_id")).toString()));
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Record Deleted!", "Message", JOptionPane.OK_OPTION);
                updateDB();
            }
        }catch(HeadlessException | ClassNotFoundException | NumberFormatException | SQLException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        ArrayList<Integer> dateList = returnCalendar();
        ArrayList<String> ids = new ArrayList<String>();
        ResultSet rs = null;
        boolean isNewEmpty = false;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection sqlConn = DatabaseConnection.getConnection();
            PreparedStatement pst = sqlConn.prepareStatement("SELECT platform_id FROM platforms WHERE platform_name=?");

            /*
            Problem: When a user change the platform name to an existing name, the program pop a "Record Updated" message,
            however, it will not show up in the table since name is set to UNIQUE. To solve the problem (the record updated message),
            1. Compare the "old version" platform name with the user updated name
            - If the "old version" name = user updated name -> proceed to next step
            - If the user updated name is not present in the table -> proceed to next step
            - If the user updated name already exist -> show error message instead of the record updated message
            */
            DefaultTableModel recordTable = (DefaultTableModel)tablePlat.getModel();
            int selectedRow = tablePlat.getSelectedRow();
            String old_name = recordTable.getValueAt(selectedRow, recordTable.findColumn("platform_name")).toString();
            String new_name = tfName.getText();

            for(int j = 0; j < 2; j++){
                pst.setString(1, j == 0 ? old_name : new_name);

                rs = pst.executeQuery();
                if(!(rs.next()))
                isNewEmpty = true;
                else
                ids.add(rs.getString(1)); // old name's id always exist
            }

            if(isNewEmpty || ids.get(0).equals(ids.get(1))){
                String version = tfVersion.getText();
                String country = tfCountry.getText();
                String date = dateList.get(2) + "-" + dateList.get(1) + "-" + dateList.get(0);

                pst = sqlConn.prepareStatement("UPDATE platforms SET platform_name=?, platform_version=?, country_of_origin=?, release_date=?"
                    + "WHERE platform_id=?");

                pst.setString(1, new_name);
                pst.setString(2, version);
                pst.setString(3, country);
                pst.setString(4, date);
                pst.setString(5, ids.get(0)); // better to use old name's id (much safer), since new name has no id yet (2 conditions in if statement)

                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Record Updated!", "User", JOptionPane.OK_OPTION);
                updateDB();
                // restore the row selection (user don't have to click a row every time)
                tablePlat.setRowSelectionInterval(selectedRow, selectedRow);
            }
            else
            JOptionPane.showMessageDialog(this, "Platform name has been created.", "Error", JOptionPane.ERROR_MESSAGE);

        }catch(HeadlessException | ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        ArrayList<Integer> dateList = returnCalendar(); // day, month, year
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection sqlConn = DatabaseConnection.getConnection();
            PreparedStatement pst = sqlConn.prepareStatement("INSERT INTO platforms(platform_name, platform_version, country_of_origin, release_date)"
                + "VALUE(?, ?, ?, ?)");

            String name = tfName.getText();
            String version = tfVersion.getText();
            String country = tfCountry.getText();
            String date = dateList.get(2) + "-" + dateList.get(1) + "-" + dateList.get(0);

            if(name.isEmpty() || version.isEmpty() || country.isEmpty()){
                JOptionPane.showMessageDialog(this, "Complete the information needed.", "Warning", JOptionPane.ERROR_MESSAGE);
            }
            else{
                pst.setString(1, name);
                pst.setString(2, version);
                pst.setString(3, country);
                pst.setString(4, date);

                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Record Added!", "User", JOptionPane.OK_OPTION);
                updateDB();
            }

        }catch(HeadlessException | ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void tablePlatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePlatMouseClicked
        DefaultTableModel recordTable = (DefaultTableModel)tablePlat.getModel();
        int selectedRow = tablePlat.getSelectedRow();

        try{
            String dateString = recordTable.getValueAt(selectedRow, recordTable.findColumn("release_date")).toString();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date date = dateFormat.parse(dateString);

            calendarDate.setDate(date);
            tfName.setText(recordTable.getValueAt(selectedRow, recordTable.findColumn("platform_name")).toString());
            tfVersion.setText(recordTable.getValueAt(selectedRow, recordTable.findColumn("platform_version")).toString());
            tfCountry.setText(recordTable.getValueAt(selectedRow, recordTable.findColumn("country_of_origin")).toString());

        }catch(ParseException ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_tablePlatMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Platform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Platform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Platform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Platform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Platform().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnUpdate;
    private com.toedter.calendar.JCalendar calendarDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablePlat;
    private javax.swing.JTextField tfCountry;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfVersion;
    // End of variables declaration//GEN-END:variables
}
